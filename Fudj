import io.vertx.core.Handler;
import io.vertx.core.buffer.Buffer;
import io.vertx.ext.web.RoutingContext;

public class FileDownloadController implements Handler<RoutingContext> {
    private final FileDownloadService fileDownloadService;

    public FileDownloadController(FileDownloadService fileDownloadService) {
        this.fileDownloadService = fileDownloadService;
    }

    @Override
    public void handle(RoutingContext context) {
        String jiraId = context.request().getParam("jiraId");

        if (jiraId == null || jiraId.isEmpty()) {
            context.response().setStatusCode(400).end("Jira ID is required.");
            return;
        }

        fileDownloadService.getFileByJiraId(jiraId).onSuccess(file -> {
            String filename = file.getString("filename");
            String fileContent = file.getString("filecontent"); // Assuming CLOB is retrieved as String

            context.response()
                .putHeader("Content-Type", "application/octet-stream")
                .putHeader("Content-Disposition", "attachment; filename=\"" + filename + "\"")
                .end(Buffer.buffer(fileContent));
        }).onFailure(err -> {
            context.response().setStatusCode(404).end(err.getMessage());
        });
    }
}
