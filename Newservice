import io.vertx.core.Future;
import io.vertx.core.Promise;
import io.vertx.sqlclient.Pool;
import io.vertx.sqlclient.Row;
import io.vertx.sqlclient.Tuple;

public class FileDownloadService {
    private final Pool dbClient;

    public FileDownloadService(Pool dbClient) {
        this.dbClient = dbClient;
    }

    public Future<JsonObject> getFileByJiraId(String jiraId) {
        Promise<JsonObject> promise = Promise.promise();
        String query = "SELECT filename, filecontent FROM file_store WHERE jira_id = ?";

        dbClient.preparedQuery(query).execute(Tuple.of(jiraId), ar -> {
            if (ar.succeeded()) {
                var result = ar.result();
                if (result.rowCount() > 0) {
                    Row row = result.iterator().next();
                    JsonObject file = new JsonObject()
                        .put("filename", row.getString("filename"))
                        .put("filecontent", row.getString("filecontent"));
                    promise.complete(file);
                } else {
                    promise.fail("File not found for Jira ID: " + jiraId);
                }
            } else {
                promise.fail(ar.cause());
            }
        });

        return promise.future();
    }
}
