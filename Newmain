import io.vertx.core.AbstractVerticle;
import io.vertx.core.Promise;
import io.vertx.ext.web.Router;
import io.vertx.ext.web.handler.BodyHandler;
import io.vertx.sqlclient.Pool;
import io.vertx.sqlclient.PoolOptions;
import io.vertx.mysqlclient.MySQLConnectOptions;

public class MainVerticle extends AbstractVerticle {
    @Override
    public void start(Promise<Void> startPromise) {
        // Configure MySQL connection
        MySQLConnectOptions connectOptions = new MySQLConnectOptions()
            .setPort(3307) // Replace with your DB port
            .setHost("localhost") // Replace with your DB host
            .setDatabase("yourdb") // Replace with your database name
            .setUser("youruser") // Replace with your DB username
            .setPassword("yourpassword"); // Replace with your DB password

        PoolOptions poolOptions = new PoolOptions().setMaxSize(5);

        // Create the database pool
        Pool pool = Pool.pool(vertx, connectOptions, poolOptions);

        // Initialize the service and controller
        FileDownloadService fileDownloadService = new FileDownloadService();
        FileDownloadController fileDownloadController = new FileDownloadController(pool, fileDownloadService);

        // Set up the router
        Router router = Router.router(vertx);
        router.route().handler(BodyHandler.create());
        router.get("/api/files/download").handler(fileDownloadController);

        // Start the server
        vertx.createHttpServer().requestHandler(router).listen(8080, http -> {
            if (http.succeeded()) {
                startPromise.complete();
                System.out.println("HTTP server started on port 8080");
            } else {
                startPromise.fail(http.cause());
            }
        });
    }
}
